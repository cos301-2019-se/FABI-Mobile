{
if(i>0)
{
check <- data.frame(finalCleanedData[which(finalCleanedData$x==i),'place'])
finalCleanedData$place[finalCleanedData$x == i] <- check[which(finalCleanedData[which( finalCleanedData$x==i),]$count == max(finalCleanedData[which(finalCleanedData$x==i),]$count)),]
}
}
write.table(unique(finalCleanedData$place), file = "finalCleanedProvinces.csv", sep = ";", append = FALSE, quote = FALSE)
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Provinces_LCS-4")
clusteredData <-  read.csv("ClusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Province[ReplacementDataset$Province %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
}
}
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
i = 43
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
write.table(ReplacementDataset, file = "ReplacedLocations.csv", sep = ";", append = FALSE, quote = FALSE)
warnings()
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Provinces_LCS-4")
clusteredData <-  read.csv("ClusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Province[ReplacementDataset$Province %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
}
}
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options")
Options <- read.csv("LocationOptions.txt", header = FALSE, sep = c(';', '#'), quote = "")
colnames(Options) <- c("place")
uniqueData <- unique(Options['place'])
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options")
Options <- read.csv("LocationOptions.txt", header = FALSE, sep = c(';', '#'), quote = "")
colnames(Options) <- c("place")
uniqueData <- unique(Options['place'])
distMatrix <- stringdistmatrix(t(uniqueData),t(uniqueData), method = "lcs")
db <- fpc::dbscan(as.dist(distMatrix), eps = 4, MinPts = 2, scale = FALSE, method = "dist")
print(db)
clusteredData <- as.factor(db$cluster)
write.table(clusteredData, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
clusters <- read.csv("clusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
Final <- cbind(clusters, Options)
write.table(Final, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
print(clusteredData)
fviz_cluster(db,distMatrix, geom = "point")
View(Options)
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options")
Options <- read.csv("LocationOptions.txt", header = FALSE, sep = c('#'), quote = "")
colnames(Options) <- c("place")
uniqueData <- unique(Options['place'])
View(Options)
distMatrix <- stringdistmatrix(t(uniqueData),t(uniqueData), method = "lcs")
db <- fpc::dbscan(as.dist(distMatrix), eps = 4, MinPts = 2, scale = FALSE, method = "dist")
print(db)
clusteredData <- as.factor(db$cluster)
write.table(clusteredData, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
clusters <- read.csv("clusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
Final <- cbind(clusters, Options)
write.table(Final, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
print(clusteredData)
fviz_cluster(db,distMatrix, geom = "point")
finalCleanedData <- read.csv("clusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "");
for(i in unique(finalCleanedData$x))
{
if(i>0)
{
check <- data.frame(finalCleanedData[which(finalCleanedData$x==i),'place'])
finalCleanedData$place[finalCleanedData$x == i] <- check[which(finalCleanedData[which( finalCleanedData$x==i),]$count == max(finalCleanedData[which(finalCleanedData$x==i),]$count)),]
}
}
write.table(unique(finalCleanedData$place), file = "finalCleanedProvinces.csv", sep = ";", append = FALSE, quote = FALSE)
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options")
Options <- read.csv("LocationOptions.txt", header = FALSE, sep = c('#'), quote = "")
colnames(Options) <- c("place")
uniqueData <- unique(Options['place'])
for(i in range(1,nrow(uniqueData)))
{
uniqueData$i$count <- str_count(Options$place, i)
}
write.table(Options, file = "LocationsUnique.csv", sep = ";", append = FALSE, quote = FALSE)
distMatrix <- stringdistmatrix(t(uniqueData),t(uniqueData), method = "lcs")
db <- fpc::dbscan(as.dist(distMatrix), eps = 4, MinPts = 2, scale = FALSE, method = "dist")
print(db)
clusteredData <- as.factor(db$cluster)
write.table(clusteredData, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
clusters <- read.csv("clusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
Final <- cbind(clusters, Options)
write.table(Final, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
print(clusteredData)
fviz_cluster(db,distMatrix, geom = "point")
warnings()
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options")
Options <- read.csv("ProvinceOptions.txt", header = FALSE, sep = c('#'), quote = "")
colnames(Options) <- c("place")
uniqueData <- unique(Options['place'])
warnings()
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options")
Options <- read.csv("ProvinceOptions.txt", header = FALSE, sep = c('#'), quote = "")
colnames(Options) <- c("place")
uniqueData <- unique(Options['place'])
write.table(Options, file = "LocationsUnique.csv", sep = ";", append = FALSE, quote = FALSE)
distMatrix <- stringdistmatrix(t(uniqueData),t(uniqueData), method = "lcs")
db <- fpc::dbscan(as.dist(distMatrix), eps = 4, MinPts = 2, scale = FALSE, method = "dist")
print(db)
clusteredData <- as.factor(db$cluster)
write.table(clusteredData, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
clusters <- read.csv("clusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
Final <- cbind(clusters, Options)
write.table(Final, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
print(clusteredData)
fviz_cluster(db,distMatrix, geom = "point")
finalCleanedData <- read.csv("clusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "");
for(i in unique(finalCleanedData$x))
{
if(i>0)
{
check <- data.frame(finalCleanedData[which(finalCleanedData$x==i),'place'])
finalCleanedData$place[finalCleanedData$x == i] <- check[which(finalCleanedData[which( finalCleanedData$x==i),]$count == max(finalCleanedData[which(finalCleanedData$x==i),]$count)),]
}
}
write.table(unique(finalCleanedData$place), file = "finalCleanedProvinces.csv", sep = ";", append = FALSE, quote = FALSE)
View(finalCleanedData)
for(i in range(1,nrow(uniqueData)))
{
uniqueData$i$count <- str_count(Options$place, i)
}
write.table(Options, file = "LocationsUnique.csv", sep = ";", append = FALSE, quote = FALSE)
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options")
Options <- read.csv("ProvinceOptions.txt", header = FALSE, sep = c('#'), quote = "")
colnames(Options) <- c("place", "count")
uniqueData <- unique(Options['place'])
distMatrix <- stringdistmatrix(t(uniqueData),t(uniqueData), method = "lcs")
db <- fpc::dbscan(as.dist(distMatrix), eps = 4, MinPts = 2, scale = FALSE, method = "dist")
print(db)
clusteredData <- as.factor(db$cluster)
write.table(clusteredData, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
clusters <- read.csv("clusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
Final <- cbind(clusters, Options)
write.table(Final, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
print(clusteredData)
fviz_cluster(db,distMatrix, geom = "point")
finalCleanedData <- read.csv("clusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "");
for(i in unique(finalCleanedData$x))
{
if(i>0)
{
check <- data.frame(finalCleanedData[which(finalCleanedData$x==i),'place'])
finalCleanedData$place[finalCleanedData$x == i] <- check[which(finalCleanedData[which( finalCleanedData$x==i),]$count == max(finalCleanedData[which(finalCleanedData$x==i),]$count)),]
}
}
write.table(unique(finalCleanedData$place), file = "finalCleanedProvinces.csv", sep = ";", append = FALSE, quote = FALSE)
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options")
Options <- read.csv("LocationOptions.txt", header = FALSE, sep = c('#'), quote = "")
colnames(Options) <- c("place", "count")
uniqueData <- unique(Options['place'])
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options")
Options <- read.csv("LocationOptions.txt", header = FALSE, sep = c('#'), quote = "")
colnames(Options) <- c("place", "count")
uniqueData <- unique(Options['place'])
distMatrix <- stringdistmatrix(t(uniqueData),t(uniqueData), method = "lcs")
db <- fpc::dbscan(as.dist(distMatrix), eps = 4, MinPts = 2, scale = FALSE, method = "dist")
print(db)
clusteredData <- as.factor(db$cluster)
write.table(clusteredData, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
clusters <- read.csv("clusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
Final <- cbind(clusters, Options)
write.table(Final, file = "clusteredDataProvince.csv", sep = ";", append = FALSE, quote = FALSE)
print(clusteredData)
fviz_cluster(db,distMatrix, geom = "point")
finalCleanedData <- read.csv("clusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "");
for(i in unique(finalCleanedData$x))
{
if(i>0)
{
check <- data.frame(finalCleanedData[which(finalCleanedData$x==i),'place'])
finalCleanedData$place[finalCleanedData$x == i] <- check[which(finalCleanedData[which( finalCleanedData$x==i),]$count == max(finalCleanedData[which(finalCleanedData$x==i),]$count)),]
}
}
write.table(unique(finalCleanedData$place), file = "finalCleanedProvinces.csv", sep = ";", append = FALSE, quote = FALSE)
write.table(Options, file = "LocationsUnique.csv", sep = ";", append = FALSE, quote = FALSE)
write.table(Options, file = "LocationsUnique.csv", sep = ";", append = FALSE, quote = FALSE)
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Provinces_LCS-4")
clusteredData <-  read.csv("ClusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Province[ReplacementDataset$Province %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
}
}
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
i = 43
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
write.table(ReplacementDataset, file = "ReplacedLocations.csv", sep = ";", append = FALSE, quote = FALSE)
warnings()
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Provinces_LCS-4")
clusteredData <-  read.csv("ClusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Province[ReplacementDataset$Province %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
}
}
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
i = 43
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
write.table(ReplacementDataset, file = "ReplacedLocations.csv", sep = ";", append = FALSE, quote = FALSE)
#REPLACEMENT
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Provinces_LCS-4")
clusteredData <-  read.csv("ClusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Province[ReplacementDataset$Province %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
}
}
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
write.table(ReplacementDataset, file = "ReplacedLocations.csv", sep = ";", append = FALSE, quote = FALSE)
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Provinces_LCS-4")
clusteredData <-  read.csv("ClusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Province[ReplacementDataset$Province %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
}
}
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
#REPLACEMENT
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
write.table(ReplacementDataset, file = "ReplacedLocations.csv", sep = ";", append = FALSE, quote = FALSE)
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
#REPLACEMENT
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Provinces_LCS-4")
clusteredData <-  read.csv("ClusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
print(i)
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
#REPLACEMENT
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
print(i)
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
write.table(ReplacementDataset, file = "ReplacedLocations.csv", sep = ";", append = FALSE, quote = FALSE)
for(i in unique(clusteredData$x))
{
if(i>0)
{
i=38
print(i)
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
for(i in unique(clusteredData$x))
{
if(i>0)
{
print(i)
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
#REPLACEMENT
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
#REPLACEMENT
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
print(i)
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
tryCatch(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),], warning=function(w) print(i))
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
#REPLACEMENT
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
#i = 37
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
tryCatch(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),], warning=function(w) print(i))
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
#REPLACEMENT
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
i = 37
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),1])
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),1])
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),])
checker <- data.frame(first(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]))
#REPLACEMENT
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Provinces_LCS-4")
clusteredData <-  read.csv("ClusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Province[ReplacementDataset$Province %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
}
}
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
i = 37
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
tryCatch(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- first(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),], warning=function(w) print(i)))
checker <- data.frame(first(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]))
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
write.table(ReplacementDataset, file = "ReplacedLocations.csv", sep = ";", append = FALSE, quote = FALSE)
#REPLACEMENT
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
ReplacementDataset <- read.csv("DG-AI_FormData.txt", header = TRUE, sep = c(';'), quote = "")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Provinces_LCS-4")
clusteredData <-  read.csv("ClusteredDataProvince.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
ReplacementDataset$Province[ReplacementDataset$Province %in% check$values] <- check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]
}
}
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning")
setwd("C:\\Users\\Aeron\\Desktop\\test\\Cleaning\\Cleaning-2\\options\\Locations_LCS-4")
clusteredData <-  read.csv("clusteredDataLocations.csv", header = TRUE, sep = c(';'), quote = "")
for(i in unique(clusteredData$x))
{
if(i>0)
{
i = 37
check <- data.frame(clusteredData[which(clusteredData$x==i), 'place'])
colnames(check) <- c("values")
tryCatch(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values] <- first(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]), warning=function(w) print(i))
checker <- data.frame(first(check[which(clusteredData[which(clusteredData$x==i),]$count == max(clusteredData[which(clusteredData$x==i),]$count)),]))
checker <- data.frame(ReplacementDataset$Location[ReplacementDataset$Location %in% check$values])
}
}
write.table(ReplacementDataset, file = "ReplacedLocations.csv", sep = ";", append = FALSE, quote = FALSE)
